'use strict';

let money, time

function start() {
    money = prompt("Ваш бюджет на месяц?");
    time = prompt("Введите дату в формате YYYY-MM-DD"); // 2 вопросы ответы которых мы записываем в переменные

    while(isNaN(money) || money == "" || money == null) { // isNaN возвращает true если туда попали не цифры 
        money = prompt("Ваш бюджет на месяц?"); // в итоге если пользователь напишет не цифры, оставит пустой строку или нажмет отмена, то мы еще раз задаем ему вопрос
    }
}
start(); // запускаем функцию


let appData = { // главный объект, который содержит все данные
    budget: money,
    timeData: time,
    expenses: {},
    optionalExpenses: {},
    income: [],
    savings: true,
    chooseExpenses: function() {
        for (let i = 0; i < 2; i++) { // запускаем цикл действий, чтобы не писать несколько раз prompt с вопросом
            // задаем переменную i = 0 которая будет вызывать действия пока не достигнет числа 1
            let a = prompt("Введите обязательную статью расходов в этом месяце"),
                b = prompt("Во сколько обойдется?");
        // теперь пишем проверки чтобы пользователь писал только то что нужно
            if (typeof(a) === "string" && typeof(a) != null &&
                typeof(b) != null && a != ''&& b != '' && a.length < 50 && b.length < 50) { 
                // проверяем что входящие данные будут строкой
                // проверяем чтобы "a" и "b" не равнялись null, то есть ничему
                // проверяем чтобы lenght(количестов символов) было не больше 50
                console.log("done");
                appData.expenses[a] = b; // так мы задаем свойство и значение в объекте appData
                // для передачи значений в объект мы ставим [сюда можем поместить любую переменную]
            } else {
                i = i - 1; // если пользователь ничего не напишет, всё начнеться ЗАНОВО
            }
        }
    },
    detectDayBudget: function() {
        // toFixed убирает лишние цифры после запятой
        appData.moneyPerDay = (appData.budget / 30).toFixed(); // создаем новое свойство в объект appData, которое будет содержать бюджет на один день
        // создавать свойства в объекте можно через точку как в этом в случае, а можно и через [], это когда переменная уже существует
        alert("Ежедневный бюджет: " + appData.moneyPerDay);
    },
    detectLevel: function() {
        if(appData.moneyPerDay < 100) { // если бюджет на один день меньше 100
            alert("Минимальный уровень достатка"); // выводим в консоль Минимальный уровень достатка
        } else if (appData.moneyPerDay > 100 & appData.moneyPerDay < 2000) {
            alert("Средний уровень достатка");
        } else if (appData.moneyPerDay > 2000) {
            alert("Высокий уровень достатка");
        } else {
            alert("Произошла какая-то ошибка");
        }
    },
    checkSavings: function() {
        if (appData.savings == true) {// проверяем или у свойства savings стоит значение true
            let save = +prompt("Какова сумма накоплений?"), // задаем переменные чтобы получить значения для высчитывания savings
                percent = +prompt("Под какой процент?");
            appData.monthIncome = save/100/12 * percent; // высчитываем месячный доход математически
            alert("Доход в месяц с вашего депозита: " + appData.monthIncome);
        }
    },
    chooseOptExpenses: function() {
        for (let x = 0; x < 3; x++) { // запускаем цикл действий, чтобы не писать несколько раз prompt с вопросом
            // задаем переменную x = 0 которая будет вызывать действия пока не достигнет числа 1
            let t = prompt("Статья необязательных расходов?");
            if (typeof(t) === "string" && typeof(t) != null &&
            t != ''&& t.length < 50) { 
                // проверяем что входящие данные будут строкой
                // проверяем чтобы "t" не равнялись null, то есть ничему
                // проверяем чтобы lenght(количестов символов) было не больше 50
                console.log("done");
                appData.expenses[1] = t; // так мы задаем свойство и значение в объекте appData
                // для передачи значений в объект мы ставим [сюда можем поместить любую переменную]
            } else {
                x = x - 1; // если пользователь ничего не напишет, всё начнеться ЗАНОВО
            }
        }    

    },
    chooseIncome: function() { // создаем метод для получения значений дополнительного дохода, который запишем в массив Income
        for ( let u = 0; u < 1; u++) {
            let items = prompt('Что принесет дополнительный доход? (Перечислите через запятую)',""); // создаем переменную для того чтобы спросить у пользователя что принесет дополнительный доход
            if (typeof(items) === "string" && typeof(items) != null &&
            items != ''&& items.length < 50) {
                console.log("done");
            } else {
                u = u - 1;
                continue;
            }
            appData.income = items.split(", ");
            // то что мы получим от пользователя нам нужно записать в массив income
            // для этого используем метод split, который превратит строку в массив и разделитель запятую
            appData.income.push(prompt('Может что-то еще?')); // спрошиваем не забыл ли пользователь что-то
            // для того чтобы добавить что-то в конец массива пишем push
            appData.income.sort(); // сортируем полученные данные по алфавиту
            appData.income.forEach(function(item, n, items) { // достаем информацию которую ввел пользователь и выводим на экран
                alert("Способы доп. заработка: " + items); // item - каждый елемент введенный пользователем, n его порядковый номер
            });
        }
    }
};

for (let key in appData) {  // делаем цикл в котором key это каждое свойство в appData
    console.log("Наша программа включает в себя данные: " + key) // выводим на экран все свойства
}
